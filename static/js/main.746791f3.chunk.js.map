{"version":3,"sources":["components/InputNumberTheme.tsx","components/InputDollars.tsx","components/InputPanel/InputPanel.styles.tsx","hooks/useMobileView.ts","components/InputPanel/InputPanel.tsx","reducers/paymentSlice/sliceKey.ts","reducers/paymentSlice/paymentSlice.ts","Calculations/MonthlyPayment/MonthlyPaymentInput.tsx","Calculations/MonthlyPayment/hooks/useMonthlyPaymentInput.ts","components/OutputPanel/OutputPanel.styles.tsx","components/OutputPanel/OutputPanel.tsx","Calculations/MonthlyPayment/MonthlyPaymentOutput.tsx","Calculations/MonthlyPayment/hooks/useMonthlyPaymentOutput.ts","components/CalculationContainer/CalculationContainer.styles.tsx","components/CalculationContainer/CalculationContainer.tsx","Calculations/MonthlyPayment/MonthlyPayment.tsx","components/AppContainer.tsx","components/Header/Header.styles.tsx","components/Header/Header.tsx","App.tsx","reportWebVitals.ts","reducers/store.ts","index.tsx"],"names":["InputNumberStyled","styled","InputNumber","_templateObject","_taggedTemplateLiteral","InputNumberTheme","props","_jsx","Tooltip","placement","title","placeholder","trigger","children","_objectSpread","inputMode","size","InputDollars","prefix","formatter","value","concat","replace","parser","InputContainer","div","_ref","isMobileView","_ref2","_ref3","useBreakpoint","Grid","useMobileView","breakpoints","useMemo","xs","InputPanel","paymentSliceKey","initialState","amount","length","rate","paymentSlice","createSlice","name","reducers","reset","state","changeAmount","action","payload","changeLength","changeRate","paymentActions","actions","paymentSelector","MonthlyPaymentInput","_useMonthlyPaymentInp","dispatch","useDispatch","_useSelector","useSelector","handleAmountChange","useCallback","handleLengthChange","handleRateChange","useMonthlyPaymentInput","_jsxs","onChange","max","min","suffix","OutputContainer","SectionContainer","_templateObject2","OutputMain","_templateObject3","RateText","_templateObject4","OutputPanel","map","child","MonthlyPaymentOutput","_useMonthlyPaymentOut","rateDecimal","showValues","term","exp","base","Math","pow","monthlyPayment","totalPayment","monthlyDisplay","toFixed","totalDisplay","useMonthlyPaymentOutput","_Fragment","Container","CalculationContainer","MonthlyPayment","AppContainer","HeaderContainer","Select","Title","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","combineReducers","_defineProperty","ReactDOM","createRoot","document","getElementById","render","React","StrictMode","Provider"],"mappings":"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","file":"static/js/main.746791f3.chunk.js","sourcesContent":["import { InputNumber, InputNumberProps, Tooltip } from \"antd\";\nimport styled from \"styled-components\";\n\nexport const InputNumberStyled = styled(InputNumber<number>)`\n  width: 75%;\n`;\n\nexport const InputNumberTheme = (props: InputNumberProps<number>) => (\n  <Tooltip placement=\"topLeft\" title={props.placeholder} trigger={[\"focus\"]}>\n    <InputNumberStyled inputMode=\"numeric\" size=\"large\" {...props} />\n  </Tooltip>\n);\n","import { InputNumberProps } from \"antd\";\nimport React from \"react\";\nimport { InputNumberTheme } from \"./InputNumberTheme\";\n\nexport const InputDollars = (props: InputNumberProps<number>) => {\n  return (\n    <InputNumberTheme\n      {...props}\n      prefix=\"$\"\n      formatter={(value) => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n      parser={(value) => value?.replace(/\\$\\s?|(,*)/g, \"\") as unknown as number}\n    />\n  );\n};\n","import styled from \"styled-components\";\n\nexport const InputContainer = styled.div<{ isMobileView?: boolean }>`\n  align-items: center;\n  background-color: #001c55;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  height: ${({ isMobileView }) => (isMobileView ? \"30vh\" : \"90vh\")};\n  justify-content: center;\n  padding: ${({ isMobileView }) => (isMobileView ? \"0px\" : \"0px 24px\")};\n  width: ${({ isMobileView }) => (isMobileView ? \"100vw\" : \"33vw\")};\n`;\n","import { Grid } from \"antd\";\nimport { useMemo } from \"react\";\n\nconst { useBreakpoint } = Grid;\n\nexport const useMobileView = () => {\n  const breakpoints = useBreakpoint();\n\n  const isMobileView = useMemo(() => breakpoints.xs, [breakpoints]);\n\n  return isMobileView;\n};\n","import React from \"react\";\nimport { InputContainer } from \"./InputPanel.styles\";\nimport { useMobileView } from \"../../hooks\";\n\ntype Props = {\n  children: React.ReactNode | React.ReactNode[];\n};\n\nexport const InputPanel = ({ children }: Props) => {\n  const isMobileView = useMobileView();\n  return (\n    <InputContainer isMobileView={isMobileView}>{children}</InputContainer>\n  );\n};\n","export const paymentSliceKey = \"payment\";\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { paymentSliceKey } from \"./sliceKey\";\n\ntype Action = {\n  payload: number | null;\n  type: string;\n};\n\ntype PaymentSlice = {\n  amount: number | null;\n  length: number | null;\n  rate: number | null;\n};\n\nconst initialState: PaymentSlice = {\n  amount: null,\n  length: null,\n  rate: null,\n};\n\nexport const paymentSlice = createSlice({\n  name: paymentSliceKey,\n  initialState,\n  reducers: {\n    reset: (state) => (state = initialState),\n    changeAmount: (state, action: Action) => {\n      state.amount = action.payload;\n    },\n    changeLength: (state, action: Action) => {\n      state.length = action.payload;\n    },\n    changeRate: (state, action: Action) => {\n      state.rate = action.payload;\n    },\n  },\n});\n\nexport const paymentActions = paymentSlice.actions;\n\nexport const paymentSelector = (state: { [paymentSliceKey]: PaymentSlice }) =>\n  state[paymentSliceKey];\n","import React from \"react\";\nimport { InputDollars } from \"../../components/InputDollars\";\nimport { InputNumberTheme } from \"../../components/InputNumberTheme\";\nimport { InputPanel } from \"../../components/InputPanel\";\nimport { useMonthlyPaymentInput } from \"./hooks\";\n\nexport const MonthlyPaymentInput = () => {\n  const {\n    amount,\n    handleAmountChange,\n    handleLengthChange,\n    handleRateChange,\n    length,\n    rate,\n  } = useMonthlyPaymentInput();\n\n  return (\n    <InputPanel>\n      <InputDollars\n        onChange={handleAmountChange}\n        placeholder=\"Loan amount\"\n        value={amount}\n      />\n      <InputNumberTheme\n        max={100}\n        min={0}\n        onChange={handleRateChange}\n        placeholder=\"Rate\"\n        suffix=\"%\"\n        value={rate}\n      />\n      <InputNumberTheme\n        min={0}\n        onChange={handleLengthChange}\n        placeholder=\"Length of loan\"\n        suffix=\"years\"\n        value={length}\n      />\n    </InputPanel>\n  );\n};\n","import { useCallback } from \"react\";\nimport {\n  paymentActions,\n  paymentSelector,\n} from \"../../../reducers/paymentSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport const useMonthlyPaymentInput = () => {\n  const dispatch = useDispatch();\n\n  const { amount, length, rate } = useSelector(paymentSelector);\n\n  const handleAmountChange = useCallback(\n    (value: number | null) => dispatch(paymentActions.changeAmount(value)),\n    [dispatch]\n  );\n\n  const handleLengthChange = useCallback(\n    (value: number | null) => dispatch(paymentActions.changeLength(value)),\n    [dispatch]\n  );\n\n  const handleRateChange = useCallback(\n    (value: number | null) => dispatch(paymentActions.changeRate(value)),\n    [dispatch]\n  );\n\n  return {\n    amount,\n    handleAmountChange,\n    handleLengthChange,\n    handleRateChange,\n    length,\n    rate,\n  };\n};\n","import styled from \"styled-components\";\n\nexport const OutputContainer = styled.div<{ isMobileView?: boolean }>`\n  align-items: center;\n  background-color: #0a2472;\n  color: #fff;\n  display: flex;\n  flex-direction: column;\n  gap: 48px;\n  height: ${({ isMobileView }) => (isMobileView ? \"60vh\" : \"90vh\")};\n  justify-content: center;\n  width: ${({ isMobileView }) => (isMobileView ? \"100vw\" : \"67vw\")};\n`;\n\nexport const SectionContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const OutputMain = styled.div`\n  font-size: 48px;\n`;\n\nexport const RateText = styled.div`\n  font-size: 24px;\n  font-weight: lighter;\n`;\n","import React from \"react\";\nimport { OutputContainer, SectionContainer } from \"./OutputPanel.styles\";\nimport { useMobileView } from \"../../hooks\";\n\ntype Props = {\n  children: React.ReactNode[];\n};\n\nexport const OutputPanel = ({ children }: Props) => {\n  const isMobileView = useMobileView();\n  return (\n    <OutputContainer isMobileView={isMobileView}>\n      {children.map((child) => (\n        <SectionContainer>{child}</SectionContainer>\n      ))}\n    </OutputContainer>\n  );\n};\n","import React from \"react\";\nimport {\n  OutputMain,\n  OutputPanel,\n  RateText,\n} from \"../../components/OutputPanel\";\nimport { useMonthlyPaymentOutput } from \"./hooks\";\n\nexport const MonthlyPaymentOutput = () => {\n  const { monthlyDisplay, showValues, totalDisplay } =\n    useMonthlyPaymentOutput();\n\n  return (\n    <OutputPanel>\n      {!showValues && <RateText>Enter loan information</RateText>}\n      <>\n        <OutputMain>{monthlyDisplay}</OutputMain>\n        {showValues && <RateText>/month</RateText>}\n      </>\n      <>\n        <OutputMain>{totalDisplay}</OutputMain>\n        {showValues && <RateText>total cost</RateText>}\n      </>\n    </OutputPanel>\n  );\n};\n","import { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { paymentSelector } from \"../../../reducers/paymentSlice\";\n\nexport const useMonthlyPaymentOutput = () => {\n  const { amount, length, rate } = useSelector(paymentSelector);\n  const rateDecimal = useMemo(() => (rate ? rate / 100 : null), [rate]);\n\n  const showValues = useMemo(\n    () => amount !== null && length !== null && rateDecimal !== null,\n    [amount, length, rateDecimal]\n  );\n\n  const term = useMemo(() => {\n    // Only calculate if every value is present\n    if (amount === null || length === null || rateDecimal === null) return null;\n\n    const exp = 12 * length;\n\n    const base = 1 + rateDecimal / 12;\n\n    return Math.pow(base, exp);\n  }, [amount, length, rateDecimal]);\n\n  /**\n   * Amount paid every month\n   */\n  const monthlyPayment = useMemo(() => {\n    if (amount === null || rateDecimal === null || term === null) return null;\n\n    // TODO: Set to 2 decimal places\n    return (amount * (rateDecimal / 12) * term) / (term - 1);\n\n    // return `$${payment.toFixed(2)}`\n  }, [amount, rateDecimal, term]);\n\n  /**\n   * Total amount paid over the lifetime of the loan\n   */\n  const totalPayment = useMemo(() => {\n    if (monthlyPayment === null || length === null) return null;\n\n    return monthlyPayment * length * 12;\n  }, [length, monthlyPayment]);\n\n  const monthlyDisplay = useMemo(\n    () =>\n      monthlyPayment === null\n        ? null\n        : `$${monthlyPayment.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`,\n    [monthlyPayment]\n  );\n\n  const totalDisplay = useMemo(\n    () =>\n      totalPayment === null\n        ? null\n        : `$${totalPayment.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`,\n    [totalPayment]\n  );\n\n  return {\n    monthlyDisplay,\n    showValues,\n    totalDisplay,\n  };\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div<{ isMobileView?: boolean }>`\n  display: flex;\n  flex-direction: ${({ isMobileView }) => (isMobileView ? \"column\" : \"row\")};\n`;\n","import React from \"react\";\nimport { useMobileView } from \"../../hooks\";\nimport { Container } from \"./CalculationContainer.styles\";\n\ntype Props = {\n  children: React.ReactNode | React.ReactNode[];\n};\n\nexport const CalculationContainer = ({ children }: Props) => {\n  const isMobileView = useMobileView();\n\n  return <Container isMobileView={isMobileView}>{children}</Container>;\n};\n","import React from \"react\";\nimport { MonthlyPaymentInput } from \"./MonthlyPaymentInput\";\nimport { MonthlyPaymentOutput } from \"./MonthlyPaymentOutput\";\nimport { CalculationContainer } from \"../../components/CalculationContainer\";\n\nexport const MonthlyPayment = () => {\n  return (\n    <CalculationContainer>\n      <MonthlyPaymentInput />\n      <MonthlyPaymentOutput />\n    </CalculationContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import { Select } from \"antd\";\nimport styled from \"styled-components\";\n\nexport const CustomSelect = styled(Select)`\n  .ant-select-arrow {\n    color: white;\n  }\n  .ant-select-selector {\n    .ant-select-selection-item {\n      color: white;\n      font-size: 24px;\n    }\n  }\n`;\n\nexport const HeaderContainer = styled.div`\n  align-items: center;\n  background-color: #00072d;\n  display: flex;\n  height: 10vh;\n  justify-content: space-between;\n  padding: 0px 24px;\n`;\n\nexport const Title = styled.div<{ isMobileView?: boolean }>`\n  color: white;\n  font-size: ${({ isMobileView }) => (isMobileView ? \"24px\" : \"36px\")};\n  font-weight: bold;\n`;\n","import React from \"react\";\nimport { CustomSelect, HeaderContainer, Title } from \"./Header.styles\";\nimport { useMobileView } from \"../../hooks\";\n\nexport const Header = () => {\n  const showSelect = false;\n\n  const isMobileView = useMobileView();\n\n  return (\n    <HeaderContainer>\n      <Title isMobileView={isMobileView}>Mortgate Calculator</Title>\n      {showSelect && (\n        <CustomSelect\n          defaultValue=\"monthlyPayment\"\n          dropdownRender={(menu) => (\n            <div style={{ backgroundColor: \"white\" }}>{menu}</div>\n          )}\n          dropdownStyle={{\n            backgroundColor: \"#00072d\",\n          }}\n          popupMatchSelectWidth={false}\n          variant=\"borderless\"\n          options={[\n            {\n              label: \"Monthly payment\",\n              value: \"monthlyPayment\",\n            },\n            {\n              label: \"Payoff\",\n              value: \"payoff\",\n            },\n          ]}\n        />\n      )}\n    </HeaderContainer>\n  );\n};\n","import React from \"react\";\nimport { MonthlyPayment } from \"./Calculations/MonthlyPayment\";\nimport { AppContainer } from \"./components/AppContainer\";\nimport { Header } from \"./components/Header/Header\";\n\nconst App = () => (\n  <AppContainer>\n    <Header />\n    <MonthlyPayment />\n  </AppContainer>\n);\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { paymentSlice, paymentSliceKey } from \"./paymentSlice\";\n\nexport const store = configureStore({\n  reducer: combineReducers({\n    [paymentSliceKey]: paymentSlice.reducer,\n  }),\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./reducers/store\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\")!);\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}