{"version":3,"sources":["types.ts","components/InputNumberTheme.tsx","components/InputDollars.tsx","components/InputPanel/InputPanel.styles.tsx","hooks/useMobileView.ts","components/InputPanel/InputPanel.tsx","reducers/paymentSlice/sliceKey.ts","reducers/paymentSlice/paymentSlice.ts","Calculations/MonthlyPayment/MonthlyPaymentInput.tsx","Calculations/MonthlyPayment/hooks/useMonthlyPaymentInput.ts","components/OutputPanel/OutputPanel.styles.tsx","components/OutputPanel/OutputPanel.tsx","Calculations/MonthlyPayment/MonthlyPaymentOutput.tsx","Calculations/MonthlyPayment/hooks/useMonthlyPaymentOutput.ts","components/CalculationContainer/CalculationContainer.styles.tsx","components/CalculationContainer/CalculationContainer.tsx","Calculations/MonthlyPayment/MonthlyPayment.tsx","components/AppContainer.tsx","components/Header/Header.styles.tsx","reducers/modeSlice/sliceKey.ts","reducers/modeSlice/modeSlice.ts","components/Header/Header.tsx","components/Header/useHeader.ts","reducers/downpaymentSlice/sliceKey.ts","reducers/downpaymentSlice/downpaymentSlice.ts","Calculations/MonthlyByDown/MonthlyByDownInput.tsx","Calculations/MonthlyByDown/hooks/useMonthlyByDownInput.ts","Calculations/MonthlyByDown/MonthlyByDownOutput.tsx","Calculations/MonthlyByDown/hooks/useMonthlyByDownOutput.ts","Calculations/MonthlyByDown/MonthlyByDown.tsx","reducers/payoffSlice/sliceKey.ts","reducers/payoffSlice/payoffSlice.ts","Calculations/Payoff/PayoffInput.tsx","Calculations/Payoff/hooks/usePayoffInput.ts","Calculations/Payoff/PayoffOutput.tsx","Calculations/Payoff/hooks/usePayoffOutput.ts","Calculations/Payoff/Payoff.tsx","App.tsx","reportWebVitals.ts","reducers/store.ts","index.tsx"],"names":["Mode","InputNumberStyled","styled","InputNumber","_templateObject","_taggedTemplateLiteral","InputNumberTheme","props","_jsx","Tooltip","placement","title","placeholder","trigger","children","_objectSpread","inputMode","size","InputDollars","prefix","formatter","value","concat","replace","parser","InputContainer","div","_ref","isMobileView","_ref2","_ref3","useBreakpoint","Grid","useMobileView","breakpoints","useMemo","xs","InputPanel","paymentSliceKey","initialState","amount","length","rate","paymentSlice","createSlice","name","reducers","reset","state","changeAmount","action","payload","changeLength","changeRate","paymentActions","actions","paymentSelector","MonthlyPaymentInput","_useMonthlyPaymentInp","dispatch","useDispatch","_useSelector","useSelector","handleAmountChange","useCallback","handleLengthChange","handleRateChange","useMonthlyPaymentInput","_jsxs","onChange","max","min","suffix","OutputContainer","SectionContainer","_templateObject2","OutputMain","_templateObject3","RateText","_templateObject4","EmptyText","_templateObject5","OutputPanel","map","child","MonthlyPaymentOutput","_useMonthlyPaymentOut","rateDecimal","showValues","term","exp","base","Math","pow","monthlyPayment","totalPayment","monthlyDisplay","toFixed","totalDisplay","useMonthlyPaymentOutput","_Fragment","Container","CalculationContainer","MonthlyPayment","AppContainer","CustomSelect","Select","HeaderContainer","Title","modeSliceKey","mode","MonthlyByDown","modeSlice","changeMode","modeActions","modeSelector","Header","_useHeader","handleChangeMode","showSelect","useHeader","defaultValue","dropdownRender","menu","style","backgroundColor","dropdownStyle","popupMatchSelectWidth","variant","options","label","Payoff","downpaymentSliceKey","cost","downpayment","downPaymentSlice","changeCost","changeDownpayment","downpaymentActions","downpaymentSelector","MonthlyByDownInput","_useMonthlyByDownInpu","handleCostChange","handleDownpaymentChange","useMonthlyByDownInput","MonthlyByDownOutput","_useMonthlyByDownOutp","useMonthlyByDownOutput","payoffSliceKey","principal","payoffSlice","changeMonthlyPayment","changePrincipal","payoffActions","payoffSelector","PayoffInput","_usePayoffInput","handleMonthlyPaymentChange","handlePrincipalChange","usePayoffInput","PayoffOutput","_usePayoffOutput","monthsRemaining","log","payoffDate","Number","isNaN","NaN","moment","Date","add","format","usePayoffOutput","App","View","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","combineReducers","_combineReducers","_defineProperty","ReactDOM","createRoot","document","getElementById","render","React","StrictMode","Provider"],"mappings":"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","file":"static/js/main.5d987657.chunk.js","sourcesContent":["export enum Mode {\n  MonthlyPayment = \"monthlyPayment\",\n  MonthlyByDown = \"monthlyByDown\",\n  Payoff = \"payoff\",\n}\n","import { InputNumber, InputNumberProps, Tooltip } from \"antd\";\nimport styled from \"styled-components\";\n\nexport const InputNumberStyled = styled(InputNumber<number>)`\n  width: 75%;\n`;\n\nexport const InputNumberTheme = (props: InputNumberProps<number>) => (\n  <Tooltip placement=\"topLeft\" title={props.placeholder} trigger={[\"focus\"]}>\n    <InputNumberStyled inputMode=\"decimal\" size=\"large\" {...props} />\n  </Tooltip>\n);\n","import { InputNumberProps } from \"antd\";\nimport React from \"react\";\nimport { InputNumberTheme } from \"./InputNumberTheme\";\n\nexport const InputDollars = (props: InputNumberProps<number>) => {\n  return (\n    <InputNumberTheme\n      {...props}\n      prefix=\"$\"\n      formatter={(value) => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n      parser={(value) => value?.replace(/\\$\\s?|(,*)/g, \"\") as unknown as number}\n    />\n  );\n};\n","import styled from \"styled-components\";\n\nexport const InputContainer = styled.div<{ isMobileView?: boolean }>`\n  align-items: center;\n  background-color: #001c55;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  height: ${({ isMobileView }) => (isMobileView ? \"40vh\" : \"90vh\")};\n  justify-content: center;\n  padding: ${({ isMobileView }) => (isMobileView ? \"0px\" : \"0px 24px\")};\n  width: ${({ isMobileView }) => (isMobileView ? \"100vw\" : \"33vw\")};\n`;\n","import { Grid } from \"antd\";\nimport { useMemo } from \"react\";\n\nconst { useBreakpoint } = Grid;\n\nexport const useMobileView = () => {\n  const breakpoints = useBreakpoint();\n\n  const isMobileView = useMemo(() => breakpoints.xs, [breakpoints]);\n\n  return isMobileView;\n};\n","import React from \"react\";\nimport { InputContainer } from \"./InputPanel.styles\";\nimport { useMobileView } from \"../../hooks\";\n\ntype Props = {\n  children: React.ReactNode | React.ReactNode[];\n};\n\nexport const InputPanel = ({ children }: Props) => {\n  const isMobileView = useMobileView();\n  return (\n    <InputContainer isMobileView={isMobileView}>{children}</InputContainer>\n  );\n};\n","export const paymentSliceKey = \"payment\";\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { paymentSliceKey } from \"./sliceKey\";\n\ntype Action = {\n  payload: number | null;\n  type: string;\n};\n\ntype PaymentSlice = {\n  amount: number | null;\n  length: number | null;\n  rate: number | null;\n};\n\nconst initialState: PaymentSlice = {\n  amount: null,\n  length: null,\n  rate: null,\n};\n\nexport const paymentSlice = createSlice({\n  name: paymentSliceKey,\n  initialState,\n  reducers: {\n    reset: (state) => (state = initialState),\n    changeAmount: (state, action: Action) => {\n      state.amount = action.payload;\n    },\n    changeLength: (state, action: Action) => {\n      state.length = action.payload;\n    },\n    changeRate: (state, action: Action) => {\n      state.rate = action.payload;\n    },\n  },\n});\n\nexport const paymentActions = paymentSlice.actions;\n\nexport const paymentSelector = (state: { [paymentSliceKey]: PaymentSlice }) =>\n  state[paymentSliceKey];\n","import React from \"react\";\nimport { InputDollars } from \"../../components/InputDollars\";\nimport { InputNumberTheme } from \"../../components/InputNumberTheme\";\nimport { InputPanel } from \"../../components/InputPanel\";\nimport { useMonthlyPaymentInput } from \"./hooks\";\n\nexport const MonthlyPaymentInput = () => {\n  const {\n    amount,\n    handleAmountChange,\n    handleLengthChange,\n    handleRateChange,\n    length,\n    rate,\n  } = useMonthlyPaymentInput();\n\n  return (\n    <InputPanel>\n      <InputDollars\n        onChange={handleAmountChange}\n        placeholder=\"Loan amount\"\n        value={amount}\n      />\n      <InputNumberTheme\n        max={100}\n        min={0}\n        onChange={handleRateChange}\n        placeholder=\"Rate\"\n        suffix=\"%\"\n        value={rate}\n      />\n      <InputNumberTheme\n        min={0}\n        onChange={handleLengthChange}\n        placeholder=\"Length of loan\"\n        suffix=\"years\"\n        value={length}\n      />\n    </InputPanel>\n  );\n};\n","import { useCallback } from \"react\";\nimport {\n  paymentActions,\n  paymentSelector,\n} from \"../../../reducers/paymentSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport const useMonthlyPaymentInput = () => {\n  const dispatch = useDispatch();\n\n  const { amount, length, rate } = useSelector(paymentSelector);\n\n  const handleAmountChange = useCallback(\n    (value: number | null) => dispatch(paymentActions.changeAmount(value)),\n    [dispatch]\n  );\n\n  const handleLengthChange = useCallback(\n    (value: number | null) => dispatch(paymentActions.changeLength(value)),\n    [dispatch]\n  );\n\n  const handleRateChange = useCallback(\n    (value: number | null) => dispatch(paymentActions.changeRate(value)),\n    [dispatch]\n  );\n\n  return {\n    amount,\n    handleAmountChange,\n    handleLengthChange,\n    handleRateChange,\n    length,\n    rate,\n  };\n};\n","import styled from \"styled-components\";\n\nexport const OutputContainer = styled.div<{ isMobileView?: boolean }>`\n  align-items: center;\n  background-color: #0a2472;\n  color: #fff;\n  display: flex;\n  flex-direction: column;\n  gap: 48px;\n  height: ${({ isMobileView }) => (isMobileView ? \"50vh\" : \"90vh\")};\n  justify-content: ${({ isMobileView }) =>\n    isMobileView ? \"flex-start\" : \"center\"};\n  width: ${({ isMobileView }) => (isMobileView ? \"100vw\" : \"67vw\")};\n`;\n\nexport const SectionContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const OutputMain = styled.div`\n  font-size: 48px;\n`;\n\nexport const RateText = styled.div`\n  font-size: 24px;\n  font-weight: lighter;\n`;\n\nexport const EmptyText = styled.div`\n  font-size: 24px;\n  font-weight: lighter;\n  padding-top: 16px;\n`;\n","import React from \"react\";\nimport { OutputContainer, SectionContainer } from \"./OutputPanel.styles\";\nimport { useMobileView } from \"../../hooks\";\n\ntype Props = {\n  children: React.ReactNode[];\n};\n\nexport const OutputPanel = ({ children }: Props) => {\n  const isMobileView = useMobileView();\n  return (\n    <OutputContainer isMobileView={isMobileView}>\n      {children.map((child) => (\n        <SectionContainer>{child}</SectionContainer>\n      ))}\n    </OutputContainer>\n  );\n};\n","import React from \"react\";\nimport {\n  EmptyText,\n  OutputMain,\n  OutputPanel,\n  RateText,\n} from \"../../components/OutputPanel\";\nimport { useMonthlyPaymentOutput } from \"./hooks\";\n\nexport const MonthlyPaymentOutput = () => {\n  const { monthlyDisplay, showValues, totalDisplay } =\n    useMonthlyPaymentOutput();\n\n  return (\n    <OutputPanel>\n      {!showValues && <EmptyText>Enter loan information</EmptyText>}\n      {showValues && (\n        <>\n          <OutputMain>{monthlyDisplay}</OutputMain>\n          <RateText>/month</RateText>\n        </>\n      )}\n      {showValues && (\n        <>\n          <OutputMain>{totalDisplay}</OutputMain>\n          <RateText>total cost</RateText>\n        </>\n      )}\n    </OutputPanel>\n  );\n};\n","import { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { paymentSelector } from \"../../../reducers/paymentSlice\";\n\nexport const useMonthlyPaymentOutput = () => {\n  const { amount, length, rate } = useSelector(paymentSelector);\n  const rateDecimal = useMemo(() => (rate ? rate / 100 : null), [rate]);\n\n  const showValues = useMemo(\n    () => amount !== null && length !== null && rateDecimal !== null,\n    [amount, length, rateDecimal]\n  );\n\n  const term = useMemo(() => {\n    // Only calculate if every value is present\n    if (amount === null || length === null || rateDecimal === null) return null;\n\n    const exp = 12 * length;\n\n    const base = 1 + rateDecimal / 12;\n\n    return Math.pow(base, exp);\n  }, [amount, length, rateDecimal]);\n\n  /**\n   * Amount paid every month\n   */\n  const monthlyPayment = useMemo(() => {\n    if (amount === null || rateDecimal === null || term === null) return null;\n\n    // TODO: Set to 2 decimal places\n    return (amount * (rateDecimal / 12) * term) / (term - 1);\n\n    // return `$${payment.toFixed(2)}`\n  }, [amount, rateDecimal, term]);\n\n  /**\n   * Total amount paid over the lifetime of the loan\n   */\n  const totalPayment = useMemo(() => {\n    if (monthlyPayment === null || length === null) return null;\n\n    return monthlyPayment * length * 12;\n  }, [length, monthlyPayment]);\n\n  const monthlyDisplay = useMemo(\n    () =>\n      monthlyPayment === null\n        ? null\n        : `$${monthlyPayment.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`,\n    [monthlyPayment]\n  );\n\n  const totalDisplay = useMemo(\n    () =>\n      totalPayment === null\n        ? null\n        : `$${totalPayment.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`,\n    [totalPayment]\n  );\n\n  return {\n    monthlyDisplay,\n    showValues,\n    totalDisplay,\n  };\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div<{ isMobileView?: boolean }>`\n  display: flex;\n  flex-direction: ${({ isMobileView }) => (isMobileView ? \"column\" : \"row\")};\n`;\n","import React from \"react\";\nimport { useMobileView } from \"../../hooks\";\nimport { Container } from \"./CalculationContainer.styles\";\n\ntype Props = {\n  children: React.ReactNode | React.ReactNode[];\n};\n\nexport const CalculationContainer = ({ children }: Props) => {\n  const isMobileView = useMobileView();\n\n  return <Container isMobileView={isMobileView}>{children}</Container>;\n};\n","import React from \"react\";\nimport { MonthlyPaymentInput } from \"./MonthlyPaymentInput\";\nimport { MonthlyPaymentOutput } from \"./MonthlyPaymentOutput\";\nimport { CalculationContainer } from \"../../components/CalculationContainer\";\n\nexport const MonthlyPayment = () => {\n  return (\n    <CalculationContainer>\n      <MonthlyPaymentInput />\n      <MonthlyPaymentOutput />\n    </CalculationContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import { Select } from \"antd\";\nimport styled from \"styled-components\";\n\nexport const CustomSelect = styled(Select)`\n  .ant-select-arrow {\n    color: white;\n  }\n  .ant-select-selector {\n    .ant-select-selection-item {\n      color: white;\n      font-size: 24px;\n      max-width: 350px;\n      text-wrap: auto;\n    }\n  }\n`;\n\nexport const HeaderContainer = styled.div`\n  align-items: center;\n  background-color: #00072d;\n  display: flex;\n  height: 10vh;\n  justify-content: space-between;\n  padding: 0px 24px;\n`;\n\nexport const Title = styled.div<{ isMobileView?: boolean }>`\n  color: white;\n  font-size: ${({ isMobileView }) => (isMobileView ? \"24px\" : \"36px\")};\n  font-weight: bold;\n`;\n","export const modeSliceKey = \"mode\";\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { modeSliceKey } from \"./sliceKey\";\nimport { Mode } from \"../../types\";\n\ntype Action = {\n  payload: Mode | null;\n  type: string;\n};\n\ntype ModeSlice = {\n  mode: Mode | null;\n};\n\nconst initialState: ModeSlice = {\n  mode: Mode.MonthlyByDown,\n};\n\nexport const modeSlice = createSlice({\n  name: modeSliceKey,\n  initialState,\n  reducers: {\n    reset: (state) => (state = initialState),\n    changeMode: (state, action: Action) => {\n      state.mode = action.payload;\n    },\n  },\n});\n\nexport const modeActions = modeSlice.actions;\n\nexport const modeSelector = (state: { [modeSliceKey]: ModeSlice }) =>\n  state[modeSliceKey];\n","import React from \"react\";\nimport { CustomSelect, HeaderContainer, Title } from \"./Header.styles\";\nimport { useHeader } from \"./useHeader\";\nimport { Mode } from \"../../types\";\n\nexport const Header = () => {\n  const { handleChangeMode, isMobileView, mode, showSelect } = useHeader();\n\n  return (\n    <HeaderContainer>\n      <Title isMobileView={isMobileView}>Mortgate Calculator</Title>\n      {showSelect && (\n        <CustomSelect\n          defaultValue=\"monthlyPayment\"\n          dropdownRender={(menu) => (\n            <div style={{ backgroundColor: \"white\" }}>{menu}</div>\n          )}\n          dropdownStyle={{\n            backgroundColor: \"#00072d\",\n          }}\n          popupMatchSelectWidth={false}\n          value={mode}\n          variant=\"borderless\"\n          onChange={handleChangeMode}\n          options={[\n            {\n              label: \"Down payment\",\n              value: Mode.MonthlyByDown,\n            },\n            {\n              label: \"Loan amount\",\n              value: Mode.MonthlyPayment,\n            },\n            {\n              label: \"Payoff\",\n              value: Mode.Payoff,\n            },\n          ]}\n        />\n      )}\n    </HeaderContainer>\n  );\n};\n","import { useCallback } from \"react\";\nimport { useMobileView } from \"../../hooks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { modeActions, modeSelector } from \"../../reducers/modeSlice\";\nimport { Mode } from \"../../types\";\n\nexport const useHeader = () => {\n  const dispatch = useDispatch();\n\n  const showSelect = true;\n\n  const isMobileView = useMobileView();\n\n  const { mode } = useSelector(modeSelector);\n\n  const handleChangeMode = useCallback(\n    (value: unknown) => dispatch(modeActions.changeMode(value as Mode)),\n    [dispatch]\n  );\n\n  return {\n    handleChangeMode,\n    isMobileView,\n    mode,\n    showSelect,\n  };\n};\n","export const downpaymentSliceKey = \"downpaymentSliceKey\";\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { downpaymentSliceKey } from \"./sliceKey\";\n\ntype Action = {\n  payload: number | null;\n  type: string;\n};\n\ntype DownpaymentSlice = {\n  cost: number | null;\n  downpayment: number | null;\n  length: number | null;\n  rate: number | null;\n};\n\nconst initialState: DownpaymentSlice = {\n  cost: null,\n  downpayment: null,\n  length: null,\n  rate: null,\n};\n\nexport const downPaymentSlice = createSlice({\n  name: downpaymentSliceKey,\n  initialState,\n  reducers: {\n    reset: (state) => (state = initialState),\n    changeCost: (state, action: Action) => {\n      state.cost = action.payload;\n    },\n    changeDownpayment: (state, action: Action) => {\n      state.downpayment = action.payload;\n    },\n    changeLength: (state, action: Action) => {\n      state.length = action.payload;\n    },\n    changeRate: (state, action: Action) => {\n      state.rate = action.payload;\n    },\n  },\n});\n\nexport const downpaymentActions = downPaymentSlice.actions;\n\nexport const downpaymentSelector = (state: {\n  [downpaymentSliceKey]: DownpaymentSlice;\n}) => state[downpaymentSliceKey];\n","import React from \"react\";\nimport { InputDollars } from \"../../components/InputDollars\";\nimport { InputNumberTheme } from \"../../components/InputNumberTheme\";\nimport { InputPanel } from \"../../components/InputPanel\";\nimport { useMonthlyByDownInput } from \"./hooks\";\n\nexport const MonthlyByDownInput = () => {\n  const {\n    cost,\n    downpayment,\n    handleCostChange,\n    handleDownpaymentChange,\n    handleLengthChange,\n    handleRateChange,\n    length,\n    rate,\n  } = useMonthlyByDownInput();\n\n  return (\n    <InputPanel>\n      <InputDollars\n        onChange={handleCostChange}\n        placeholder=\"Home price\"\n        value={cost}\n      />\n      <InputDollars\n        onChange={handleDownpaymentChange}\n        placeholder=\"Down payment\"\n        value={downpayment}\n      />\n      <InputNumberTheme\n        max={100}\n        min={0}\n        onChange={handleRateChange}\n        placeholder=\"Rate\"\n        suffix=\"%\"\n        value={rate}\n      />\n      <InputNumberTheme\n        min={0}\n        onChange={handleLengthChange}\n        placeholder=\"Length of loan\"\n        suffix=\"years\"\n        value={length}\n      />\n    </InputPanel>\n  );\n};\n","import { useCallback } from \"react\";\nimport {\n  downpaymentActions,\n  downpaymentSelector,\n} from \"../../../reducers/downpaymentSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport const useMonthlyByDownInput = () => {\n  const dispatch = useDispatch();\n\n  const { cost, downpayment, length, rate } = useSelector(downpaymentSelector);\n\n  const handleCostChange = useCallback(\n    (value: number | null) => dispatch(downpaymentActions.changeCost(value)),\n    [dispatch]\n  );\n\n  const handleDownpaymentChange = useCallback(\n    (value: number | null) =>\n      dispatch(downpaymentActions.changeDownpayment(value)),\n    [dispatch]\n  );\n\n  const handleLengthChange = useCallback(\n    (value: number | null) => dispatch(downpaymentActions.changeLength(value)),\n    [dispatch]\n  );\n\n  const handleRateChange = useCallback(\n    (value: number | null) => dispatch(downpaymentActions.changeRate(value)),\n    [dispatch]\n  );\n\n  return {\n    cost,\n    downpayment,\n    handleCostChange,\n    handleDownpaymentChange,\n    handleLengthChange,\n    handleRateChange,\n    length,\n    rate,\n  };\n};\n","import React from \"react\";\nimport {\n  EmptyText,\n  OutputMain,\n  OutputPanel,\n  RateText,\n} from \"../../components/OutputPanel\";\nimport { useMonthlyByDownOutput } from \"./hooks\";\n\nexport const MonthlyByDownOutput = () => {\n  const { monthlyDisplay, showValues, totalDisplay } = useMonthlyByDownOutput();\n\n  return (\n    <OutputPanel>\n      {!showValues && <EmptyText>Enter loan information</EmptyText>}\n      {showValues && (\n        <>\n          <OutputMain>{monthlyDisplay}</OutputMain>\n          <RateText>/month</RateText>\n        </>\n      )}\n      {showValues && (\n        <>\n          <OutputMain>{totalDisplay}</OutputMain>\n          <RateText>total cost</RateText>\n        </>\n      )}\n    </OutputPanel>\n  );\n};\n","import { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { downpaymentSelector } from \"../../../reducers/downpaymentSlice\";\n\nexport const useMonthlyByDownOutput = () => {\n  const { cost, downpayment, length, rate } = useSelector(downpaymentSelector);\n  const rateDecimal = useMemo(() => (rate ? rate / 100 : null), [rate]);\n\n  const showValues = useMemo(\n    () =>\n      cost !== null &&\n      downpayment !== null &&\n      length !== null &&\n      rateDecimal !== null,\n    [cost, downpayment, length, rateDecimal]\n  );\n\n  const amount = useMemo(() => {\n    if (cost === null || downpayment === null) return null;\n    return cost - downpayment;\n  }, [cost, downpayment]);\n\n  const term = useMemo(() => {\n    // Only calculate if every value is present\n    if (amount === null || length === null || rateDecimal === null) return null;\n\n    const exp = 12 * length;\n\n    const base = 1 + rateDecimal / 12;\n\n    return Math.pow(base, exp);\n  }, [amount, length, rateDecimal]);\n\n  /**\n   * Amount paid every month\n   */\n  const monthlyPayment = useMemo(() => {\n    if (amount === null || rateDecimal === null || term === null) return null;\n\n    // TODO: Set to 2 decimal places\n    return (amount * (rateDecimal / 12) * term) / (term - 1);\n\n    // return `$${payment.toFixed(2)}`\n  }, [amount, rateDecimal, term]);\n\n  /**\n   * Total amount paid over the lifetime of the loan\n   */\n  const totalPayment = useMemo(() => {\n    if (monthlyPayment === null || length === null) return null;\n\n    return monthlyPayment * length * 12;\n  }, [length, monthlyPayment]);\n\n  const monthlyDisplay = useMemo(\n    () =>\n      monthlyPayment === null\n        ? null\n        : `$${monthlyPayment.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`,\n    [monthlyPayment]\n  );\n\n  const totalDisplay = useMemo(\n    () =>\n      totalPayment === null\n        ? null\n        : `$${totalPayment.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`,\n    [totalPayment]\n  );\n\n  return {\n    monthlyDisplay,\n    showValues,\n    totalDisplay,\n  };\n};\n","import React from \"react\";\nimport { MonthlyByDownInput } from \"./MonthlyByDownInput\";\nimport { MonthlyByDownOutput } from \"./MonthlyByDownOutput\";\nimport { CalculationContainer } from \"../../components/CalculationContainer\";\n\nexport const MonthlyByDown = () => {\n  return (\n    <CalculationContainer>\n      <MonthlyByDownInput />\n      <MonthlyByDownOutput />\n    </CalculationContainer>\n  );\n};\n","export const payoffSliceKey = \"payoff\";\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { payoffSliceKey } from \"./sliceKey\";\n\ntype Action = {\n  payload: number | null;\n  type: string;\n};\n\ntype PayoffSlice = {\n  monthlyPayment: number | null;\n  principal: number | null;\n  rate: number | null;\n};\n\nconst initialState: PayoffSlice = {\n  monthlyPayment: null,\n  principal: null,\n  rate: null,\n};\n\nexport const payoffSlice = createSlice({\n  name: payoffSliceKey,\n  initialState,\n  reducers: {\n    reset: (state) => (state = initialState),\n    changeMonthlyPayment: (state, action: Action) => {\n      state.monthlyPayment = action.payload;\n    },\n    changePrincipal: (state, action: Action) => {\n      state.principal = action.payload;\n    },\n    changeRate: (state, action: Action) => {\n      state.rate = action.payload;\n    },\n  },\n});\n\nexport const payoffActions = payoffSlice.actions;\n\nexport const payoffSelector = (state: { [payoffSliceKey]: PayoffSlice }) =>\n  state[payoffSliceKey];\n","import React from \"react\";\nimport { InputDollars } from \"../../components/InputDollars\";\nimport { InputNumberTheme } from \"../../components/InputNumberTheme\";\nimport { InputPanel } from \"../../components/InputPanel\";\nimport { usePayoffInput } from \"./hooks\";\n\nexport const PayoffInput = () => {\n  const {\n    handleMonthlyPaymentChange,\n    handlePrincipalChange,\n    handleRateChange,\n    monthlyPayment,\n    principal,\n    rate,\n  } = usePayoffInput();\n\n  return (\n    <InputPanel>\n      <InputDollars\n        onChange={handleMonthlyPaymentChange}\n        placeholder=\"Total monthly payment\"\n        value={monthlyPayment}\n      />\n      <InputNumberTheme\n        max={100}\n        min={0}\n        onChange={handleRateChange}\n        placeholder=\"Rate\"\n        suffix=\"%\"\n        value={rate}\n      />\n      <InputDollars\n        onChange={handlePrincipalChange}\n        placeholder=\"Remaining principal\"\n        value={principal}\n      />\n    </InputPanel>\n  );\n};\n","import { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { payoffActions, payoffSelector } from \"../../../reducers/payoffSlice\";\n\nexport const usePayoffInput = () => {\n  const dispatch = useDispatch();\n\n  const { monthlyPayment, principal, rate } = useSelector(payoffSelector);\n\n  const handleMonthlyPaymentChange = useCallback(\n    (value: number | null) =>\n      dispatch(payoffActions.changeMonthlyPayment(value)),\n    [dispatch]\n  );\n\n  const handlePrincipalChange = useCallback(\n    (value: number | null) => dispatch(payoffActions.changePrincipal(value)),\n    [dispatch]\n  );\n\n  const handleRateChange = useCallback(\n    (value: number | null) => dispatch(payoffActions.changeRate(value)),\n    [dispatch]\n  );\n\n  return {\n    handleMonthlyPaymentChange,\n    handlePrincipalChange,\n    handleRateChange,\n    monthlyPayment,\n    principal,\n    rate,\n  };\n};\n","import React from \"react\";\nimport {\n  EmptyText,\n  OutputMain,\n  OutputPanel,\n  RateText,\n} from \"../../components/OutputPanel\";\nimport { usePayoffOutput } from \"./hooks\";\n\nexport const PayoffOutput = () => {\n  const { payoffDate, showValues } = usePayoffOutput();\n\n  return (\n    <OutputPanel>\n      {!showValues && <EmptyText>Enter loan information</EmptyText>}\n      {showValues && (\n        <>\n          <OutputMain>{payoffDate}</OutputMain>\n          <RateText>payoff date</RateText>\n        </>\n      )}\n    </OutputPanel>\n  );\n};\n","import { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { payoffSelector } from \"../../../reducers/payoffSlice\";\nimport moment from \"moment\";\n\nexport const usePayoffOutput = () => {\n  const { monthlyPayment, principal, rate } = useSelector(payoffSelector);\n  const rateDecimal = useMemo(() => (rate ? rate / 100 / 12 : null), [rate]);\n\n  const monthsRemaining = useMemo(() => {\n    if (monthlyPayment === null || principal === null || rateDecimal === null)\n      return null;\n\n    const numerator = Math.log(\n      monthlyPayment / (monthlyPayment - principal * rateDecimal)\n    );\n\n    const denominator = Math.log(1 + rateDecimal); // log of 1 + monthly rate\n\n    return numerator / denominator;\n  }, [monthlyPayment, principal, rateDecimal]);\n\n  const payoffDate = useMemo(() => {\n    if (monthsRemaining === null) return null;\n\n    if (Number.isNaN(monthsRemaining)) return NaN;\n\n    return moment(new Date())\n      .add(monthsRemaining, \"months\")\n      .format(\"MMMM YYYY\");\n  }, [monthsRemaining]);\n\n  const showValues = useMemo(() => monthsRemaining !== null, [monthsRemaining]);\n\n  return {\n    monthsRemaining,\n    payoffDate,\n    showValues,\n  };\n};\n","import React from \"react\";\nimport { PayoffInput } from \"./PayoffInput\";\nimport { PayoffOutput } from \"./PayoffOutput\";\nimport { CalculationContainer } from \"../../components/CalculationContainer\";\n\nexport const Payoff = () => {\n  return (\n    <CalculationContainer>\n      <PayoffInput />\n      <PayoffOutput />\n    </CalculationContainer>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport { MonthlyPayment } from \"./Calculations/MonthlyPayment\";\nimport { AppContainer } from \"./components/AppContainer\";\nimport { Header } from \"./components/Header/Header\";\nimport { useSelector } from \"react-redux\";\nimport { modeSelector } from \"./reducers/modeSlice\";\nimport { Mode } from \"./types\";\nimport { MonthlyByDown } from \"./Calculations/MonthlyByDown\";\nimport { Payoff } from \"./Calculations/Payoff\";\n\nconst App = () => {\n  const { mode } = useSelector(modeSelector);\n\n  const View = useMemo(() => {\n    switch (mode) {\n      case Mode.MonthlyPayment:\n        return <MonthlyPayment />;\n      case Mode.MonthlyByDown:\n        return <MonthlyByDown />;\n      case Mode.Payoff:\n        return <Payoff />;\n      default:\n        return null;\n    }\n  }, [mode]);\n\n  return (\n    <AppContainer>\n      <Header />\n      {View}\n    </AppContainer>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { paymentSlice, paymentSliceKey } from \"./paymentSlice\";\nimport { modeSlice, modeSliceKey } from \"./modeSlice\";\nimport { downPaymentSlice, downpaymentSliceKey } from \"./downpaymentSlice\";\nimport { payoffSliceKey, payoffSlice } from \"./payoffSlice\";\n\nexport const store = configureStore({\n  reducer: combineReducers({\n    [downpaymentSliceKey]: downPaymentSlice.reducer,\n    [modeSliceKey]: modeSlice.reducer,\n    [paymentSliceKey]: paymentSlice.reducer,\n    [payoffSliceKey]: payoffSlice.reducer,\n  }),\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./reducers/store\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\")!);\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}